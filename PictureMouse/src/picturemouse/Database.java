package picturemouse;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;

/**
 * Some of the code has been generated by StarUML(tm) Java Add-In. This the 
 * database which is used to store all of the current data for the session. It
 * can look up data, save data for the current session, load data stored from
 * the last session into a file and save data to a file so that it can be 
 * accessed in other sessions.
 *
 * @version 24/02/2014
 * @author John Every
 * 
 */
public class Database
{
    /**
     * A List to store the current films.
     */
    private ArrayList<Film> films;
    
    /**
     * A List to store the current reviews.
     */
    private ArrayList<Review> reviews;
    
    /**
     * A List to store the current accounts.
     */
    private ArrayList<Account> accounts;
    
    /**
     * A List to store the current newsletter.
     */
    private Newsletter newsletter;
    
    /**
     * 
     * @return List of current films stored.
     */
    public ArrayList<Film> getFilms()
    {
        return this.films;
    }
    
    /**
     * 
     * @return List of current accounts stored.
     */
    public ArrayList<Account> getAccounts()
    {
        return this.accounts;
    }
    
    /**
     * 
     * @return List of current reviews stored.
     */
    public ArrayList<Review> getReviews()
    {
        return this.reviews;
    }
    
    /**
     * This method adds a Film object, a Review object or an Account object 
     * to its corresponding List attribute. If it is passed a Newsletter 
     * object then this is assigned to the newsletter attribute.
     * 
     * @param o Object to save to the database.
     */
    public void save(Object o)
    {
        if(o instanceof Newsletter)
        {
            this.newsletter = (Newsletter)o;
        }
        else if(o instanceof Account)
        {
            this.accounts.add((Account)o);
        }
        else if(o instanceof Review)
        {
            this.reviews.add((Review)o);
        }
        else if(o instanceof Film)
        {
            this.films.add((Film)o);
        }
    }
	
    public Film lookupFilm(int filmId)
    {
	
    }
	
    public Review lookupReview(int reviewId)
    {
	
    }
	
    public Account lookupAccount(String username)
    {
	
    }
	
    public void saveToFile()
    {
        FileOutputStream fileOutput = null;
        ObjectOutputStream objectOutput = null;
       
        try
        {
            fileOutput = new FileOutputStream( "datebase.ser" );
            objectOutput = new ObjectOutputStream( fileOutput );
            // Saves the films, reviews and accounts objects into a file.
            objectOutput.writeObject( this.films ); 
            objectOutput.writeObject( this.reviews );
            objectOutput.writeObject( this.accounts );
            objectOutput.writeObject( this.newsletter );
                
            objectOutput.close();
        }
       
        catch( IOException e )
        {
            System.out.println("Something bad happened... Try again");
        }
    }
	
	
    public void loadFromFile()
    {
        this.reviews = null;
        this.accounts = null;
        this.films = null;
        this.newsletter = null;
            
        FileInputStream fileInput = null;
        ObjectInputStream objectInput = null;
       
        try
        {
            fileInput = new FileInputStream("database.ser");
            objectInput = new ObjectInputStream( fileInput );
                
            // Loads the contents of the file and saves it into reviews, 
            // accounts and films respectively.
            this.reviews = ( ArrayList<Review> ) objectInput.readObject(); 
            this.accounts = ( ArrayList<Account> ) objectInput.readObject(); 
            this.films = ( ArrayList<Film> ) objectInput.readObject(); 
            this.newsletter = ( Newsletter ) objectInput.readObject();
                
            objectInput.close();
        }
       
        catch( IOException e )
        {
            System.out.println("Something bad happened... Try again");
        }
           
        catch( ClassNotFoundException e )
        {
           System.out.println("Missing data in file.");
        }  
    }
}
