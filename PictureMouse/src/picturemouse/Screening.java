package picturemouse;

import java.sql.Time;
import java.util.Date;
import java.util.HashMap;
import java.io.Serializable;

/**
 * Some of the code has been generated by StarUML(tm) Java Add-In.
 * Class for every Screening of every Film. This class contains information 
 * about the screening, including the seating plan which is used to tell
 * whether a ticket has been booked already or not.
 * 
 * @author Jake Carr
 */
public class Screening implements Serializable
{
    /**
     * ScreeningId uniquely defines a Screening object as there could be 
     * multiple screenings that have equal values for the other attributes.
     */
    private int screeningId;
    private Time time;
    private Date date;
    private int filmId;
    private HashMap<Integer,String> seatingPlan;

    /**
     * Normal constructor allowing you to construct a Screening object.
     * 
     * @param screeningId screening Id of screening
     * @param time time of Screening
     * @param date date of Screening
     * @param filmId filmId of film the screening is for
     * @param seatingPlan seating plan of screening
     */
    public Screening(int screeningId, Time time, Date date, int filmId, HashMap<Integer, String> seatingPlan){
        this.screeningId = screeningId;
        this.time = time;
        this.date = date;
        this.filmId = filmId;
        this.seatingPlan = seatingPlan;
    }

    /**
     * Method to check whether a seat is available for a specific Screening.
     * This essentially returns the opposite of a the HashMap containsKey() 
     * method as this will return true if the seat is is taken.
     * 
     * @param seatNumber seatNumber that you want to check is available
     * @return whether or not the seat is available.
     */
    public boolean available(int seatNumber) {
        return !seatingPlan.containsKey(seatNumber);
    }

    /**
     * Method to book a seat number with an account. It users the username of
     * the account and stores this as a value in the HashMap, seatingPlan, with 
     * the seat number as a key.
     * 
     * @param seatNumber seat number booking for
     * @param username  username of account booking
     */
    public void book(int seatNumber, String username) {
        seatingPlan.put(seatNumber, username);
    }

    /**
     * Method to return the screeningId
     * @return the screeningId of a Screening
     */
    public int getScreeningId() {
        return screeningId;
    }
    
    /**
     * Method to get the username of the account that has booked the seat
     * 
     * @param seatNumber seat number that is booked
     * @return the username that the seat is booked for
     */
    public String getUsername(int seatNumber) {
        return seatingPlan.get(seatNumber);
    }
    
    /**
     * Method to return the date of the screening.
     * 
     * @return Date of Screening
     */
    public Date getDate(){
        return date;
    }
}
